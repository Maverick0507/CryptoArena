{"version":3,"sources":["services/cryptoApi.js","components/Loader.jsx","components/Cryptocurrencies.jsx","services/cryptoNewsApi.js","components/News.jsx","components/Homepage.jsx","images/cryptocurrency.png","components/Navbar.jsx","images/coming-soon.png","components/Exchanges.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","App.js","app/store.js","index.js"],"names":["cryptoApiHeaders","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getCryptoDetails","coinId","getExchanges","getCryptoHistory","timePeriod","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","useGetExchangesQuery","Loader","className","Cryptocurrencies","simplified","cryptosList","data","isFetching","useState","cryptos","setCryptos","searchTerm","setSearchTerm","useEffect","coins","filteredData","filter","item","name","toLowerCase","includes","placeholder","onChange","e","target","value","gutter","map","currency","xs","sm","lg","to","uuid","title","rank","extra","src","iconUrl","hoverable","millify","price","marketCap","change","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","demoImage","Text","Typography","Title","Option","Select","News","setNewsCategory","cryptoNews","span","showSearch","optionFilterProp","filterOption","input","option","children","indexOf","news","i","href","rel","level","length","substring","image","thumbnail","contentUrl","alt","description","provider","moment","datePublished","startOf","fromNow","Homepage","globalStats","stats","total","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","Navbar","activeMenu","setActiveMenu","undefined","screenSize","setScreenSize","handleResize","window","innerWidth","addEventListener","removeEventListener","icon","size","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","Exchanges","BgImage","loading","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","history","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","CryptoDetails","useParams","setTimePeriod","cryptoDetails","coin","DollarCircleOutlined","NumberOutlined","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfMarkets","numberOfExchanges","supply","confirmed","CheckOutlined","StopOutlined","ExclamationCircleOutlined","circulating","symbol","defaultValue","date","HTMLReactParser","links","link","type","App","exact","path","style","color","textAlign","configureStore","reducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.9cb77fba.chunk.js","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\n// Crypto API Headers\nconst cryptoApiHeaders = {\n  'x-rapidapi-key': '4fd700b206mshf1649220cd33d6cp1dbdfajsn436416b3f9ad',\n  'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\n};\n\n// Base URL\nconst baseUrl = 'https://coinranking1.p.rapidapi.com';\n\n// Make API Request\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders });\n\n// Crypto API Redux Logic\nexport const cryptoApi = createApi({\n  reducerPath: 'cryptoApi',\n  baseQuery: fetchBaseQuery({ baseUrl }),\n  endpoints: (builder) => ({\n    // get cryptocurrencies\n    getCryptos: builder.query({\n      query: (count) => createRequest(`/coins?limit=${count}`),\n    }),\n    // get crypto details\n    getCryptoDetails: builder.query({\n      query: (coinId) => createRequest(`/coin/${coinId}`),\n    }),\n    getExchanges: builder.query({\n      query: () => createRequest('/exchanges'),\n    }),\n    // get crypto history\n    getCryptoHistory: builder.query({\n      query: ({ coinId, timePeriod }) => createRequest(`coin/${coinId}/history?timePeriod=${timePeriod}`),\n    }),\n  }),\n});\n\n// Export Crypto API\nexport const {\n  useGetCryptosQuery,\n  useGetCryptoDetailsQuery,\n  useGetExchangesQuery,\n  useGetCryptoHistoryQuery,\n} = cryptoApi;\n","import React from 'react';\nimport { Spin } from 'antd';\n\nconst Loader = () => (\n  <div className=\"loader\">\n    <Spin />\n  </div>\n);\n\nexport default Loader;\n","import React, { useEffect, useState } from 'react';\nimport millify from 'millify';\nimport { Link } from 'react-router-dom';\nimport { Card, Row, Col, Input } from 'antd';\n\nimport { useGetCryptosQuery } from '../services/cryptoApi';\nimport Loader from './Loader';\n\nconst Cryptocurrencies = ({ simplified }) => {\n  const count = simplified ? 10 : 200;\n  const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\n  const [cryptos, setCryptos] = useState();\n  const [searchTerm, setSearchTerm] = useState('');\n\n  useEffect(() => {\n    setCryptos(cryptosList?.data?.coins);\n\n    const filteredData = cryptosList?.data?.coins.filter((item) => item.name.toLowerCase().includes(searchTerm));\n\n    setCryptos(filteredData);\n  }, [cryptosList, searchTerm]);\n\n  if (isFetching) return <Loader />;\n\n  return (\n    <>\n      {!simplified && (\n        <div className=\"search-crypto\">\n          <Input\n            placeholder=\"Search Cryptocurrency\"\n            onChange={(e) => setSearchTerm(e.target.value.toLowerCase())}\n          />\n        </div>\n      )}\n      <Row gutter={[32, 32]} className=\"crypto-card-container\">\n        {cryptos?.map((currency) => (\n          <Col\n            xs={24}\n            sm={12}\n            lg={6}\n            className=\"crypto-card\"\n            key={currency.uuid}\n          >\n\n            {/* Note: Change currency.id to currency.uuid  */}\n            <Link key={currency.uuid} to={`/crypto/${currency.uuid}`}>\n              <Card\n                title={`${currency.rank}. ${currency.name}`}\n                extra={<img className=\"crypto-image\" src={currency.iconUrl} />}\n                hoverable\n              >\n                <p>Price: {millify(currency.price)}</p>\n                <p>Market Cap: {millify(currency.marketCap)}</p>\n                <p>Daily Change: {currency.change}%</p>\n              </Card>\n            </Link>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default Cryptocurrencies;\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nconst cryptoNewsHeaders = {\n    'X-BingApis-SDK': 'true',\n    'X-RapidAPI-Key': '4fd700b206mshf1649220cd33d6cp1dbdfajsn436416b3f9ad',\n    'X-RapidAPI-Host': 'bing-news-search1.p.rapidapi.com',\n  };\n\n  const baseUrl = 'https://bing-news-search1.p.rapidapi.com';\n\n  const createRequest = (url) => ({ url, headers: cryptoNewsHeaders });\n\n  export const cryptoNewsApi = createApi({\n    reducerPath: 'cryptoNewsApi',\n    baseQuery: fetchBaseQuery({ baseUrl }),\n\n    endpoints: (builder) => ({\n       getCryptoNews: builder.query({\n           query: ({ newsCategory, count }) => createRequest(`/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`),\n       }),\n    }),\n});\n\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;\n","import React, { useState } from 'react';\nimport { Select, Typography, Row, Col, Avatar, Card } from 'antd';\nimport moment from 'moment';\n\nimport { useGetCryptosQuery } from '../services/cryptoApi';\nimport { useGetCryptoNewsQuery } from '../services/cryptoNewsApi';\nimport Loader from './Loader';\n\nconst demoImage = 'https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News';\n\nconst { Text, Title } = Typography;\nconst { Option } = Select;\n\nconst News = ({ simplified }) => {\n  const [newsCategory, setNewsCategory] = useState('Cryptocurrency');\n  const { data } = useGetCryptosQuery(100);\n  const { data: cryptoNews } = useGetCryptoNewsQuery({ newsCategory, count: simplified ? 9 : 24 });\n\n  if (!cryptoNews?.value) return <Loader />;\n\n  return (\n    <Row gutter={[24, 24]}>\n      {!simplified && (\n        <Col span={24}>\n          <Select\n            showSearch\n            className=\"select-news\"\n            placeholder=\"Select a Crypto\"\n            optionFilterProp=\"children\"\n            onChange={(value) => setNewsCategory(value)}\n            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n          >\n            <Option value=\"Cryptocurency\">Cryptocurrency</Option>\n            {data?.data?.coins?.map((currency) => <Option value={currency.name}>{currency.name}</Option>) }\n          </Select>\n        </Col>\n      )}\n      {cryptoNews.value.map((news, i) => (\n        <Col xs={24} sm={12} lg={8} key={i}>\n          <Card hoverable className=\"news-card\">\n            <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\n              <div className=\"news-image-container\">\n                <Title className=\"news-title\" level={4}>{news.name.length > 50 ? `${news.name.substring(0, 50)}...` : news.name}</Title>\n                <img src={news?.image?.thumbnail?.contentUrl || demoImage} alt=\"\" />\n              </div>\n              <p>{news.description.length > 100 ? `${news.description.substring(0, 100)}...` : news.description}</p>\n              <div className=\"provider-container\">\n                <div>\n                  <Avatar src={news.provider[0]?.image?.thumbnail?.contentUrl || demoImage} alt=\"\" />\n                  <Text className=\"provider-name\">{news.provider[0]?.name}</Text>\n                </div>\n                <Text>{moment(news.datePublished).startOf('ss').fromNow()}</Text>\n              </div>\n            </a>\n          </Card>\n        </Col>\n      ))}\n    </Row>\n  );\n};\n\nexport default News;\n","import React from 'react';\nimport millify from 'millify';\nimport { Typography, Row, Col, Statistic } from 'antd';\nimport { Link } from 'react-router-dom';\n\nimport { useGetCryptosQuery } from '../services/cryptoApi';\nimport Cryptocurrencies from './Cryptocurrencies';\nimport News from './News';\nimport Loader from './Loader';\n\nconst { Title } = Typography;\n\nconst Homepage = () => {\n  const { data, isFetching } = useGetCryptosQuery(10);\n  const globalStats = data?.data?.stats;\n\n  if (isFetching) return <Loader />;\n\n  return (\n    <>\n      <Title level={2} className=\"heading\">Global Crypto Stats</Title>\n      <Row gutter={[32, 32]}>\n        <Col span={12}><Statistic title=\"Total Cryptocurrencies\" value={globalStats.total} /></Col>\n        <Col span={12}><Statistic title=\"Total Exchanges\" value={millify(globalStats.totalExchanges)} /></Col>\n        <Col span={12}><Statistic title=\"Total Market Cap:\" value={`$${millify(globalStats.totalMarketCap)}`} /></Col>\n        <Col span={12}><Statistic title=\"Total 24h Volume\" value={`$${millify(globalStats.total24hVolume)}`} /></Col>\n        <Col span={12}><Statistic title=\"Total Cryptocurrencies\" value={globalStats.total} /></Col>\n        <Col span={12}><Statistic title=\"Total Markets\" value={millify(globalStats.totalMarkets)} /></Col>\n      </Row>\n      <div className=\"home-heading-container\">\n        <Title level={2} className=\"home-title\">Top 10 Cryptos In The World</Title>\n        <Title level={3} className=\"show-more\"><Link to=\"/cryptocurrencies\">Show more</Link></Title>\n      </div>\n      <Cryptocurrencies simplified />\n      <div className=\"home-heading-container\">\n        <Title level={2} className=\"home-title\">Latest Crypto News</Title>\n        <Title level={3}><Link to=\"/news\">Show more</Link></Title>\n      </div>\n      <News simplified />\n    </>\n  );\n};\n\nexport default Homepage;\n","export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useState, useEffect } from 'react';\nimport { Button, Menu, Typography, Avatar } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { HomeOutlined, MoneyCollectOutlined, BulbOutlined, FundOutlined, MenuOutlined } from '@ant-design/icons';\n\nimport icon from '../images/cryptocurrency.png';\n\nconst Navbar = () => {\n  const [activeMenu, setActiveMenu] = useState(true);\n  const [screenSize, setScreenSize] = useState(undefined);\n\n  useEffect(() => {\n    const handleResize = () => setScreenSize(window.innerWidth);\n\n    window.addEventListener('resize', handleResize);\n\n    handleResize();\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  useEffect(() => {\n    if (screenSize <= 800) {\n      setActiveMenu(false);\n    } else {\n      setActiveMenu(true);\n    }\n  }, [screenSize]);\n\n  return (\n    <div className=\"nav-container\">\n      <div className=\"logo-container\">\n        <Avatar src={icon} size=\"large\" />\n        <Typography.Title level={2} className=\"logo\"><Link to=\"/\">Crypto Lok</Link></Typography.Title>\n        <Button className=\"menu-control-container\" onClick={() => setActiveMenu(!activeMenu)}><MenuOutlined /></Button>\n      </div>\n      {activeMenu && (\n      <Menu theme=\"dark\">\n        <Menu.Item icon={<HomeOutlined />}>\n          <Link to=\"/\">Home</Link>\n        </Menu.Item>\n        <Menu.Item icon={<FundOutlined />}>\n          <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\n        </Menu.Item>\n        <Menu.Item icon={<MoneyCollectOutlined />}>\n          <Link to=\"/exchanges\">Exchanges</Link>\n        </Menu.Item>\n        <Menu.Item icon={<BulbOutlined />}>\n          <Link to=\"/news\">News</Link>\n        </Menu.Item>\n      </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default Navbar;\n","export default __webpack_public_path__ + \"static/media/coming-soon.e0c3c7cb.png\";","import React from 'react';\r\nimport { Row, Typography } from 'antd';\r\n\r\nimport BgImage from '../images/coming-soon.png';\r\n\r\n// Exchanges (Comming Soon)\r\nconst Exchanges = () => (\r\n  <Row gutter={[32, 32]} className=\"exchanges-card-container\">\r\n    <img src={BgImage} alt=\"Coming Soon\" className=\"exchanges-image\" loading=\"lazy\" />\r\n    <Typography.Title level={1} className=\"exchanges-heading\">\r\n      Coming Soon\r\n    </Typography.Title>\r\n  </Row>\r\n );\r\n\r\nexport default Exchanges;\r\n","import React from 'react';\r\n// Chart is required by chart.js, don't remove even if not used.\r\n// eslint-disable-next-line\r\nimport Chart from \"chart.js/auto\";\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Col, Row, Typography } from 'antd';\r\n\r\n// Typography\r\nconst { Title } = Typography;\r\n\r\n// Line Chart\r\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\r\n  const coinPrice = [];\r\n  const coinTimestamp = [];\r\n\r\n  // Coin Price\r\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n    coinPrice.push(coinHistory?.data?.history[i].price);\r\n  }\r\n\r\n  // Coin Timestamp\r\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n    coinTimestamp.push(\r\n      new Date(\r\n        coinHistory?.data?.history[i].timestamp * 1000,\r\n      ).toLocaleDateString(),\r\n    );\r\n  }\r\n\r\n  // Data\r\n  const data = {\r\n    labels: coinTimestamp,\r\n    datasets: [\r\n      {\r\n        label: 'Price In USD',\r\n        data: coinPrice,\r\n        fill: false,\r\n        backgroundColor: '#0071bd',\r\n        borderColor: '#0071bd',\r\n      },\r\n    ],\r\n  };\r\n\r\n  // Options\r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Coin Info */}\r\n      <Row className=\"chart-header\">\r\n        <Title level={2} className=\"chart-title\">\r\n          {coinName} Price Chart{' '}\r\n        </Title>\r\n        <Col className=\"price-container\">\r\n          <Title level={5} className=\"price-change\">\r\n            Change: {coinHistory?.data?.change}%\r\n          </Title>\r\n          <Title level={5} className=\"current-price\">\r\n            Current {coinName} Price: ${currentPrice}\r\n          </Title>\r\n        </Col>\r\n      </Row>\r\n      {/* Chart */}\r\n      <Line data={data} options={options} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LineChart;\r\n","import React, { useState } from 'react';\r\nimport HTMLReactParser from 'html-react-parser';\r\nimport { useParams } from 'react-router-dom';\r\nimport millify from 'millify';\r\nimport { Col, Row, Typography, Select } from 'antd';\r\nimport {\r\n  MoneyCollectOutlined,\r\n  DollarCircleOutlined,\r\n  FundOutlined,\r\n  ExclamationCircleOutlined,\r\n  StopOutlined,\r\n  TrophyOutlined,\r\n  CheckOutlined,\r\n  NumberOutlined,\r\n  ThunderboltOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport {\r\n  useGetCryptoDetailsQuery,\r\n  useGetCryptoHistoryQuery,\r\n} from '../services/cryptoApi';\r\nimport LineChart from './LineChart';\r\nimport Loader from './Loader';\r\n\r\n// Typography and Select\r\nconst { Title, Text } = Typography;\r\nconst { Option } = Select;\r\n\r\n// Crypto Details\r\nconst CryptoDetails = () => {\r\n  const { coinId } = useParams();\r\n  const [timePeriod, setTimePeriod] = useState('7d');\r\n  // fetch crypto details\r\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\r\n  // fetch crypto history\r\n  const { data: coinHistory } = useGetCryptoHistoryQuery({\r\n    coinId,\r\n    timePeriod,\r\n  });\r\n\r\n  const cryptoDetails = data?.data?.coin;\r\n\r\n  // Loading\r\n  if (isFetching) return <Loader />;\r\n\r\n  // Time\r\n  const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\r\n\r\n  // Stats\r\n  const stats = [\r\n    {\r\n      title: 'Price to USD',\r\n      value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`,\r\n      icon: <DollarCircleOutlined />,\r\n    },\r\n    { title: 'Rank', value: cryptoDetails.rank, icon: <NumberOutlined /> },\r\n    {\r\n      title: '24h Volume',\r\n      value: `$ ${\r\n        cryptoDetails['24hVolume'] && millify(cryptoDetails['24hVolume'])\r\n      }`,\r\n      icon: <ThunderboltOutlined />,\r\n    },\r\n    {\r\n      title: 'Market Cap',\r\n      value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`,\r\n      icon: <DollarCircleOutlined />,\r\n    },\r\n    {\r\n      title: 'All-time-high(daily avg.)',\r\n      value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`,\r\n      icon: <TrophyOutlined />,\r\n    },\r\n  ];\r\n\r\n  // Generic Stats\r\n  const genericStats = [\r\n    {\r\n      title: 'Number Of Markets',\r\n      value: cryptoDetails.numberOfMarkets,\r\n      icon: <FundOutlined />,\r\n    },\r\n    {\r\n      title: 'Number Of Exchanges',\r\n      value: cryptoDetails.numberOfExchanges,\r\n      icon: <MoneyCollectOutlined />,\r\n    },\r\n    {\r\n      title: 'Aprooved Supply',\r\n      value: cryptoDetails.supply.confirmed ? (\r\n        <CheckOutlined />\r\n      ) : (\r\n        <StopOutlined />\r\n      ),\r\n      icon: <ExclamationCircleOutlined />,\r\n    },\r\n    {\r\n      title: 'Total Supply',\r\n      value: `$ ${millify(cryptoDetails.supply.total)}`,\r\n      icon: <ExclamationCircleOutlined />,\r\n    },\r\n    {\r\n      title: 'Circulating Supply',\r\n      value: `$ ${millify(cryptoDetails.supply.circulating)}`,\r\n      icon: <ExclamationCircleOutlined />,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Col className=\"coin-detail-container\">\r\n      <Col className=\"coin-heading-container\">\r\n        {/* Coin Name */}\r\n        <Title level={2} className=\"coin-name\">\r\n          {cryptoDetails.name} ({cryptoDetails.symbol}) Price\r\n        </Title>\r\n        {/* Coin Details */}\r\n        <p>\r\n          {cryptoDetails.name} live price in US dollars. View value statistics,\r\n          market cap and supply.\r\n        </p>\r\n      </Col>\r\n      {/* Time Period Select */}\r\n      <Select\r\n        defaultValue=\"7d\"\r\n        className=\"select-timeperiod\"\r\n        placeholder=\"Select Time Period\"\r\n        onChange={(value) => setTimePeriod(value)}\r\n      >\r\n        {time.map((date) => (\r\n          <Option key={date}>{date}</Option>\r\n        ))}\r\n      </Select>\r\n\r\n      {/* Crypto History Line Chart */}\r\n      <LineChart\r\n        coinHistory={coinHistory}\r\n        currentPrice={millify(cryptoDetails.price)}\r\n        coinName={cryptoDetails.name}\r\n      />\r\n      <Col className=\"stats-container\">\r\n        <Col className=\"coin-value-statistics\">\r\n          <Col className=\"coin-value-statistics-heading\">\r\n            {/* Coin name */}\r\n            <Title level={3} className=\"coin-details-heading\">\r\n              {cryptoDetails.name} Value Statistics\r\n            </Title>\r\n            <p>An overview showing the stats of {cryptoDetails.name}</p>\r\n          </Col>\r\n          {/* coin stats */}\r\n          {stats.map(({ icon, title, value }) => (\r\n            <Col className=\"coin-stats\">\r\n              <Col className=\"coin-stats-name\">\r\n                <Text>{icon}</Text>\r\n                <Text>{title}</Text>\r\n              </Col>\r\n              <Text className=\"stats\">{value}</Text>\r\n            </Col>\r\n          ))}\r\n        </Col>\r\n\r\n        {/* all coin stats */}\r\n        <Col className=\"other-stats-info\">\r\n          <Col className=\"coin-value-statistics-heading\">\r\n            <Title level={3} className=\"coin-details-heading\">\r\n              Other Statistics\r\n            </Title>\r\n            <p>An overview showing the stats of all cryptocurrencies</p>\r\n          </Col>\r\n          {genericStats.map(({ icon, title, value }) => (\r\n            <Col className=\"coin-stats\">\r\n              <Col className=\"coin-stats-name\">\r\n                <Text>{icon}</Text>\r\n                <Text>{title}</Text>\r\n              </Col>\r\n              <Text className=\"stats\">{value}</Text>\r\n            </Col>\r\n          ))}\r\n        </Col>\r\n      </Col>\r\n\r\n      {/* Coin Description */}\r\n      <Col className=\"coin-desc-link\">\r\n        <Row className=\"coin-desc\">\r\n          <Title level={3} className=\"coin-details-heading\">\r\n            What is {cryptoDetails.name}?\r\n            {HTMLReactParser(cryptoDetails.description)}\r\n          </Title>\r\n        </Row>\r\n        {/* Coin Links */}\r\n        <Col className=\"coin-links\">\r\n          <Title level={3} className=\"coin-details-heading\">\r\n            {CryptoDetails.name} Links\r\n          </Title>\r\n          {cryptoDetails.links.map((link) => (\r\n            <Row className=\"coin-link\" key={link.name}>\r\n              <Title level={5} className=\"link-name\">\r\n                {link.type}\r\n              </Title>\r\n              <a href={link.url} target=\"_blank\" rel=\"noreferrer\">\r\n                {link.name}\r\n              </a>\r\n            </Row>\r\n          ))}\r\n        </Col>\r\n      </Col>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default CryptoDetails;\r\n","import React from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport { Layout, Typography, Space } from 'antd';\n\nimport { Exchanges, Homepage, News, Cryptocurrencies, CryptoDetails, Navbar } from './components';\nimport './App.css';\n\nconst App = () => (\n  <div className=\"app\">\n    <div className=\"navbar\">\n      <Navbar />\n    </div>\n    <div className=\"main\">\n      <Layout>\n        <div className=\"routes\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Homepage />\n            </Route>\n            <Route exact path=\"/exchanges\">\n              <Exchanges />\n            </Route>\n            <Route exact path=\"/cryptocurrencies\">\n              <Cryptocurrencies />\n            </Route>\n            <Route exact path=\"/crypto/:coinId\">\n              <CryptoDetails />\n            </Route>\n            <Route exact path=\"/news\">\n              <News />\n            </Route>\n          </Switch>\n        </div>\n      </Layout>\n      <div className=\"footer\">\n        <Typography.Title level={5} style={{ color: 'white', textAlign: 'center' }}>Copyright © 2023\n          <Link to=\"/\">\n            Crypto Lok Inc.\n          </Link> <br />\n          All Rights Reserved.\n        </Typography.Title>\n        <Space>\n          <Link to=\"/\">Home</Link>\n          <Link to=\"/exchanges\">Exchanges</Link>\n          <Link to=\"/news\">News</Link>\n        </Space>\n      </div>\n    </div>\n  </div>\n);\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport { cryptoApi } from '../services/cryptoApi';\nimport { cryptoNewsApi } from '../services/cryptoNewsApi';\n\nexport default configureStore({\n  reducer: {\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\n    [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\n  },\n});\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './App';\nimport store from './app/store';\n\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n"],"sourceRoot":""}